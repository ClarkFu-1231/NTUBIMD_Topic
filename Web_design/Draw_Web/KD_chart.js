function cel_num(arg1,arg2,code){
    if(code=="Add"){
      let r1,r2,m; 
      try{r1=arg1.toString().split(".")[1].length}catch(e){r1=0} 
      try{r2=arg2.toString().split(".")[1].length}catch(e){r2=0} 
      m=Math.pow(10,Math.max(r1,r2));
      return (arg1*m+arg2*m)/m;
    }else if(code=="Sub"){
      let r1,r2,m,n;
      try {r1=arg1.toString().split(".")[1].length;}catch(e){r1=0}
      try {r2=arg2.toString().split(".")[1].length;}catch(e){r2=0}
      m=Math.pow(10,Math.max(r1,r2));
      n=(r1>=r2)?r1:r2;
      return ((arg1*m-arg2*m)/m).toFixed(n);
    }else if(code=="Mul"){
      let m=0,s1=arg1.toString(),s2=arg2.toString(); 
      try {m+=s1.split(".")[1].length;}catch(e){} 
      try {m+=s2.split(".")[1].length;}catch(e){} 
      return Number(s1.replace(".",""))*Number(s2.replace(".",""))/Math.pow(10,m);
    }else if(code=="Div"){
      let t1=0,t2=0,r1,r2; 
      try {t1=arg1.toString().split(".")[1].length;}catch(e){} 
      try {t2=arg2.toString().split(".")[1].length;}catch(e){} 
      with(Math){ 
        r1=Number(arg1.toString().replace(".",""));
        r2=Number(arg2.toString().replace(".",""));
        return (r1/r2)*pow(10,t2-t1); 
      }
    }
  }
  function cel_max(day,T,in_arr) {
    let output=in_arr[T]["H"]
    if(T<=day-1){
      for(i=0;i<T;i++){
        output=(in_arr[T-i]["H"]>output)?in_arr[T-i]["H"]:output
      }
    }else{
      for(i=0;i<day;i++){
        output=(in_arr[T-i]["H"]>output)?in_arr[T-i]["H"]:output
      }
    }
    return output
  }
  function cel_min(day,T,in_arr) {
    let output=in_arr[T]["L"]
    if(T<=day-1){
      for(i=0;i<T;i++){
        output=(in_arr[T-i]["L"]<output)?in_arr[T-i]["L"]:output
      }
    }else{
      for(i=0;i<day;i++){
        output=(in_arr[T-i]["L"]<output)?in_arr[T-i]["L"]:output
      }
    }
    return output
  }
  function cel_RSV(day,T,in_arr,out_arr) {
    for(cnt=0;cnt<T;cnt++){
      let max=cel_max(day,cnt,in_arr)
      let min=cel_min(day,cnt,in_arr)
      let output=cel_num(cel_num(in_arr[cnt]["C"],min,"Sub"),cel_num(max,min,"Sub"),"Div")
      out_arr.push(output)
    }
  }
  function cel_K(day,T,in_arr,out_arr){
    let K=(T<=0)?0:cel_num(cel_num(cel_num(1,3,"Div"),in_arr[T-1],"Mul"),cel_num(cel_num(2,3,"Div"),cel_K(day,T-1,in_arr,out_arr),"Mul"),"Add")
    out_arr.push(K)
    return K
  }
  function cel_D(day,T,in_arr,out_arr){
    let D=(T<=0)?0:cel_num(cel_num(cel_num(1,3,"Div"),in_arr[T-1],"Mul"),cel_num(cel_num(2,3,"Div"),cel_D(day,T-1,in_arr,out_arr),"Mul"),"Add")
    out_arr.push(D)
    return D
  }
  function rnd_num(arg){
    return cel_num(Math.round(cel_num(arg,10000,"Mul")),100,"Div")
  }
  function show_K(in_arr1){
    let out_arr=[]
    for(cnt=0;cnt<in_arr1.length;cnt++){
      out_arr.push(parseInt(rnd_num(in_arr1[cnt])))
    }
    return out_arr
  }
  function show_D(in_arr1,in_arr2){
    let out_arr=[]
    for(cnt=0;cnt<in_arr1.length;cnt++){
      out_arr.push(parseInt(rnd_num(in_arr2[cnt])))
    }
    return out_arr
  }
  function run_K(){
    // let da=JSON.parse(json_data)
    let KD_da=[
      /*{"H":40.7,"L":40.35,"C":40.35},
      {"H":40.6,"L":40.2,"C":40.25},
      {"H":40.45,"L":40.15,"C":40.15},
      {"H":40.95,"L":40.3,"C":40.8},*/
      {"H":41.15,"L":40.65,"C":40.75},
      {"H":40.9,"L":40.5,"C":40.55},
      {"H":40.65,"L":40.4,"C":40.4},
      {"H":40.9,"L":40.55,"C":40.85},
      {"H":41.3,"L":40.8,"C":41.25},
      {"H":41.65,"L":41.2,"C":41.35},
      {"H":41.65,"L":41.05,"C":41.6},
      {"H":42.1,"L":41.55,"C":41.8},
      {"H":42.6,"L":42,"C":42.45},
      {"H":42.9,"L":42.4,"C":42.55},
      {"H":42.9,"L":42.6,"C":42.9},
      {"H":42.7,"L":42,"C":42},
      {"H":42.5,"L":42.1,"C":42.1},
      {"H":42.55,"L":42.25,"C":42.55},
      {"H":42.55,"L":42.15,"C":42.5},
      {"H":42.5,"L":42.05,"C":42.5},
      {"H":42.9,"L":42.55,"C":42.65},
      {"H":43.4,"L":42.8,"C":43.4},
      {"H":43.4,"L":42.9,"C":43},
      {"H":43.2,"L":42.85,"C":42.85},
      {"H":42.85,"L":42.55,"C":42.7},
      {"H":42.75,"L":42.3,"C":42.35},
      {"H":42.7,"L":42.35,"C":42.6},
      {"H":42.95,"L":42.65,"C":42.85},
      {"H":43.25,"L":42.9,"C":43.1},
      {"H":43,"L":42.6,"C":42.7},
      {"H":46.9,"L":45.05,"C":45.8},
      {"H":46,"L":45.6,"C":45.7},
      {"H":45.75,"L":45.5,"C":45.55},
      {"H":45.65,"L":45.35,"C":45.55},
      {"H":46.25,"L":45.6,"C":46.15},
      {"H":46.6,"L":46.2,"C":46.5},
      {"H":46.6,"L":46.25,"C":46.55},
      {"H":46.8,"L":46.55,"C":46.8},
      {"H":46.95,"L":46.6,"C":46.7},
      {"H":46.95,"L":46.6,"C":46.85},
      {"H":46.85,"L":46.7,"C":46.8},
      {"H":46.9,"L":46.6,"C":46.9},
      {"H":47.05,"L":46.7,"C":46.7},
      {"H":46.85,"L":46.7,"C":46.85},
      {"H":47.5,"L":46.85,"C":47.2},
      {"H":47.3,"L":46.6,"C":47},
      {"H":48.5,"L":47,"C":47.9},
      {"H":49,"L":47.75,"C":49},
      {"H":50.5,"L":49.75,"C":50.4},
      {"H":54.9,"L":51.1,"C":52},
      {"H":56.9,"L":52.2,"C":55.7},
      {"H":58.7,"L":53.5,"C":54.1},
      {"H":53.8,"L":51.1,"C":53},
      {"H":54.2,"L":52.1,"C":53.1},
      {"H":53.2,"L":52.5,"C":52.7},
      {"H":53.2,"L":52.1,"C":53.2},
      {"H":53.1,"L":52.1,"C":52.1},
      {"H":52,"L":50.6,"C":51.2},
      {"H":52,"L":49,"C":50.2},
      {"H":51.4,"L":49.6,"C":50.8},
      {"H":53,"L":50.9,"C":53},
      {"H":53.4,"L":51.7,"C":52.3},
      {"H":53.3,"L":52.2,"C":52.9},
      {"H":53.2,"L":50.9,"C":51.6},
      {"H":51.6,"L":47.5,"C":49.6},
      {"H":50,"L":47.25,"C":49.2},
      {"H":50.3,"L":49.3,"C":49.6},
      {"H":49.05,"L":47.5,"C":47.9},
      {"H":50,"L":48.2,"C":50},
      {"H":50.8,"L":49.5,"C":50.5},
      {"H":51.3,"L":50,"C":50.8},
      {"H":53.9,"L":50.8,"C":51.2},
      {"H":51.5,"L":50.4,"C":51.3},
      {"H":51.6,"L":51,"C":51.1},
      {"H":51.5,"L":50.6,"C":50.7},
      {"H":50.4,"L":49.85,"C":50.3},
      {"H":50.7,"L":50.1,"C":50.6},
      {"H":51.6,"L":50.5,"C":51.6},
      {"H":51.6,"L":51.2,"C":51.5},
      {"H":52.1,"L":51.4,"C":52},
      {"H":52.4,"L":51.8,"C":52.3},
      {"H":52.3,"L":51.7,"C":51.9},
      {"H":52,"L":50.8,"C":51.5},
      {"H":51.8,"L":51.1,"C":51.4},
      {"H":51.4,"L":50.8,"C":51.3},
      {"H":51.5,"L":50.9,"C":51.5},
      {"H":51.6,"L":51.2,"C":51.4},
      {"H":51.4,"L":51,"C":51.3},
      {"H":52,"L":51.3,"C":51.9},
      {"H":51.8,"L":51.4,"C":51.5},
      {"H":51.4,"L":51,"C":51},
      {"H":51.2,"L":50.4,"C":50.7},
      {"H":51.2,"L":50.6,"C":50.9},
      {"H":51.1,"L":50.5,"C":51},
      {"H":51.2,"L":50.8,"C":51.1},
      {"H":51.3,"L":50.8,"C":51},
      {"H":51.2,"L":50.8,"C":51.1},
      {"H":51.2,"L":50.9,"C":51.2},
      {"H":51.2,"L":50.9,"C":51},
      {"H":51,"L":50.6,"C":50.6},
      {"H":50.9,"L":50.5,"C":50.5},
      {"H":51,"L":50.5,"C":50.6},
      {"H":51.3,"L":50.7,"C":51.2},
      {"H":51.3,"L":51,"C":51.3},
      {"H":52.9,"L":51.5,"C":52.8},
      {"H":52.8,"L":51.8,"C":52},
      {"H":52.4,"L":51.8,"C":52.2},
      {"H":52.5,"L":51.7,"C":51.9},
      {"H":52,"L":51.3,"C":51.5},
      {"H":51.8,"L":51.3,"C":51.6},
      {"H":51.6,"L":51.3,"C":51.5},
      {"H":52,"L":51.3,"C":52},
      {"H":51.8,"L":51.4,"C":51.7},
      {"H":52.4,"L":51.7,"C":51.8},
      {"H":52.3,"L":51.9,"C":52.1},
      {"H":53.1,"L":52.2,"C":53},
      {"H":53.8,"L":53,"C":53.2},
      {"H":53.3,"L":52.6,"C":53},
      {"H":53,"L":52,"C":52.4},
      {"H":52.9,"L":52.1,"C":52.9},
      {"H":52.9,"L":52.5,"C":52.6},
      {"H":52.8,"L":52.5,"C":52.8},
      {"H":53.9,"L":53,"C":53.9},
      {"H":54.5,"L":53.6,"C":53.8},
      {"H":53.8,"L":52.6,"C":52.7},
      {"H":53.2,"L":52.4,"C":52.9},
      {"H":52.6,"L":51.7,"C":52.4},
      {"H":52.4,"L":51.7,"C":51.9},
      {"H":51.7,"L":50.8,"C":51.1},
      {"H":47.75,"L":45.65,"C":47.6},
      {"H":48.6,"L":47.95,"C":48.4},
      {"H":48.45,"L":47.7,"C":47.95},
      {"H":47.95,"L":47.2,"C":47.3},
      {"H":47.3,"L":46.4,"C":47.25},
      {"H":47.25,"L":46,"C":46.2},
      {"H":46.75,"L":45.7,"C":46.15},
      {"H":47.25,"L":46.55,"C":46.8},
      {"H":47.1,"L":46.45,"C":46.75},
      {"H":47.25,"L":46.55,"C":47.2},
      {"H":47.3,"L":46.6,"C":46.95},
      {"H":47.5,"L":46.75,"C":47.45},
      {"H":47.6,"L":47.15,"C":47.6},
      {"H":48.45,"L":47.25,"C":48.45},
      {"H":48.4,"L":47.85,"C":48.4},
      {"H":48.4,"L":47.7,"C":47.9},
      {"H":48.55,"L":47.85,"C":48.5},
      {"H":49.1,"L":48.15,"C":48.8},
      {"H":49,"L":48.55,"C":48.75},
      {"H":48.95,"L":48.2,"C":48.55},
      {"H":48.2,"L":47.8,"C":48.2},
      {"H":49,"L":48.05,"C":49},
      {"H":50.2,"L":49,"C":50.1},
      {"H":52,"L":50.7,"C":51.4},
      {"H":51.8,"L":50.9,"C":51.2},
      {"H":51.7,"L":50.8,"C":51.7},
      {"H":51.7,"L":50.7,"C":50.7},
      {"H":50.7,"L":49.5,"C":50.7},
      {"H":51.6,"L":50.8,"C":51.2},
      {"H":51.7,"L":51.2,"C":51.3},
      {"H":51.3,"L":50.6,"C":51.1},
      {"H":51.4,"L":50.2,"C":51}
    ]
    let KD_con=[9,3,3]
    let RSV_arr=[],K_arr=[],D_arr=[]
    cel_RSV(KD_con[0],KD_da.length,KD_da,RSV_arr)
    cel_K(KD_con[1],RSV_arr.length,RSV_arr,K_arr)
    K_arr.shift()
    cel_D(KD_con[2],K_arr.length,K_arr,D_arr)
    D_arr.shift()
    return show_K(K_arr)
  }
  function run_D(){
    // let da=JSON.parse(json_data)
    let KD_da=[
      /*{"H":40.7,"L":40.35,"C":40.35},
      {"H":40.6,"L":40.2,"C":40.25},
      {"H":40.45,"L":40.15,"C":40.15},
      {"H":40.95,"L":40.3,"C":40.8},*/
      {"H":41.15,"L":40.65,"C":40.75},
      {"H":40.9,"L":40.5,"C":40.55},
      {"H":40.65,"L":40.4,"C":40.4},
      {"H":40.9,"L":40.55,"C":40.85},
      {"H":41.3,"L":40.8,"C":41.25},
      {"H":41.65,"L":41.2,"C":41.35},
      {"H":41.65,"L":41.05,"C":41.6},
      {"H":42.1,"L":41.55,"C":41.8},
      {"H":42.6,"L":42,"C":42.45},
      {"H":42.9,"L":42.4,"C":42.55},
      {"H":42.9,"L":42.6,"C":42.9},
      {"H":42.7,"L":42,"C":42},
      {"H":42.5,"L":42.1,"C":42.1},
      {"H":42.55,"L":42.25,"C":42.55},
      {"H":42.55,"L":42.15,"C":42.5},
      {"H":42.5,"L":42.05,"C":42.5},
      {"H":42.9,"L":42.55,"C":42.65},
      {"H":43.4,"L":42.8,"C":43.4},
      {"H":43.4,"L":42.9,"C":43},
      {"H":43.2,"L":42.85,"C":42.85},
      {"H":42.85,"L":42.55,"C":42.7},
      {"H":42.75,"L":42.3,"C":42.35},
      {"H":42.7,"L":42.35,"C":42.6},
      {"H":42.95,"L":42.65,"C":42.85},
      {"H":43.25,"L":42.9,"C":43.1},
      {"H":43,"L":42.6,"C":42.7},
      {"H":46.9,"L":45.05,"C":45.8},
      {"H":46,"L":45.6,"C":45.7},
      {"H":45.75,"L":45.5,"C":45.55},
      {"H":45.65,"L":45.35,"C":45.55},
      {"H":46.25,"L":45.6,"C":46.15},
      {"H":46.6,"L":46.2,"C":46.5},
      {"H":46.6,"L":46.25,"C":46.55},
      {"H":46.8,"L":46.55,"C":46.8},
      {"H":46.95,"L":46.6,"C":46.7},
      {"H":46.95,"L":46.6,"C":46.85},
      {"H":46.85,"L":46.7,"C":46.8},
      {"H":46.9,"L":46.6,"C":46.9},
      {"H":47.05,"L":46.7,"C":46.7},
      {"H":46.85,"L":46.7,"C":46.85},
      {"H":47.5,"L":46.85,"C":47.2},
      {"H":47.3,"L":46.6,"C":47},
      {"H":48.5,"L":47,"C":47.9},
      {"H":49,"L":47.75,"C":49},
      {"H":50.5,"L":49.75,"C":50.4},
      {"H":54.9,"L":51.1,"C":52},
      {"H":56.9,"L":52.2,"C":55.7},
      {"H":58.7,"L":53.5,"C":54.1},
      {"H":53.8,"L":51.1,"C":53},
      {"H":54.2,"L":52.1,"C":53.1},
      {"H":53.2,"L":52.5,"C":52.7},
      {"H":53.2,"L":52.1,"C":53.2},
      {"H":53.1,"L":52.1,"C":52.1},
      {"H":52,"L":50.6,"C":51.2},
      {"H":52,"L":49,"C":50.2},
      {"H":51.4,"L":49.6,"C":50.8},
      {"H":53,"L":50.9,"C":53},
      {"H":53.4,"L":51.7,"C":52.3},
      {"H":53.3,"L":52.2,"C":52.9},
      {"H":53.2,"L":50.9,"C":51.6},
      {"H":51.6,"L":47.5,"C":49.6},
      {"H":50,"L":47.25,"C":49.2},
      {"H":50.3,"L":49.3,"C":49.6},
      {"H":49.05,"L":47.5,"C":47.9},
      {"H":50,"L":48.2,"C":50},
      {"H":50.8,"L":49.5,"C":50.5},
      {"H":51.3,"L":50,"C":50.8},
      {"H":53.9,"L":50.8,"C":51.2},
      {"H":51.5,"L":50.4,"C":51.3},
      {"H":51.6,"L":51,"C":51.1},
      {"H":51.5,"L":50.6,"C":50.7},
      {"H":50.4,"L":49.85,"C":50.3},
      {"H":50.7,"L":50.1,"C":50.6},
      {"H":51.6,"L":50.5,"C":51.6},
      {"H":51.6,"L":51.2,"C":51.5},
      {"H":52.1,"L":51.4,"C":52},
      {"H":52.4,"L":51.8,"C":52.3},
      {"H":52.3,"L":51.7,"C":51.9},
      {"H":52,"L":50.8,"C":51.5},
      {"H":51.8,"L":51.1,"C":51.4},
      {"H":51.4,"L":50.8,"C":51.3},
      {"H":51.5,"L":50.9,"C":51.5},
      {"H":51.6,"L":51.2,"C":51.4},
      {"H":51.4,"L":51,"C":51.3},
      {"H":52,"L":51.3,"C":51.9},
      {"H":51.8,"L":51.4,"C":51.5},
      {"H":51.4,"L":51,"C":51},
      {"H":51.2,"L":50.4,"C":50.7},
      {"H":51.2,"L":50.6,"C":50.9},
      {"H":51.1,"L":50.5,"C":51},
      {"H":51.2,"L":50.8,"C":51.1},
      {"H":51.3,"L":50.8,"C":51},
      {"H":51.2,"L":50.8,"C":51.1},
      {"H":51.2,"L":50.9,"C":51.2},
      {"H":51.2,"L":50.9,"C":51},
      {"H":51,"L":50.6,"C":50.6},
      {"H":50.9,"L":50.5,"C":50.5},
      {"H":51,"L":50.5,"C":50.6},
      {"H":51.3,"L":50.7,"C":51.2},
      {"H":51.3,"L":51,"C":51.3},
      {"H":52.9,"L":51.5,"C":52.8},
      {"H":52.8,"L":51.8,"C":52},
      {"H":52.4,"L":51.8,"C":52.2},
      {"H":52.5,"L":51.7,"C":51.9},
      {"H":52,"L":51.3,"C":51.5},
      {"H":51.8,"L":51.3,"C":51.6},
      {"H":51.6,"L":51.3,"C":51.5},
      {"H":52,"L":51.3,"C":52},
      {"H":51.8,"L":51.4,"C":51.7},
      {"H":52.4,"L":51.7,"C":51.8},
      {"H":52.3,"L":51.9,"C":52.1},
      {"H":53.1,"L":52.2,"C":53},
      {"H":53.8,"L":53,"C":53.2},
      {"H":53.3,"L":52.6,"C":53},
      {"H":53,"L":52,"C":52.4},
      {"H":52.9,"L":52.1,"C":52.9},
      {"H":52.9,"L":52.5,"C":52.6},
      {"H":52.8,"L":52.5,"C":52.8},
      {"H":53.9,"L":53,"C":53.9},
      {"H":54.5,"L":53.6,"C":53.8},
      {"H":53.8,"L":52.6,"C":52.7},
      {"H":53.2,"L":52.4,"C":52.9},
      {"H":52.6,"L":51.7,"C":52.4},
      {"H":52.4,"L":51.7,"C":51.9},
      {"H":51.7,"L":50.8,"C":51.1},
      {"H":47.75,"L":45.65,"C":47.6},
      {"H":48.6,"L":47.95,"C":48.4},
      {"H":48.45,"L":47.7,"C":47.95},
      {"H":47.95,"L":47.2,"C":47.3},
      {"H":47.3,"L":46.4,"C":47.25},
      {"H":47.25,"L":46,"C":46.2},
      {"H":46.75,"L":45.7,"C":46.15},
      {"H":47.25,"L":46.55,"C":46.8},
      {"H":47.1,"L":46.45,"C":46.75},
      {"H":47.25,"L":46.55,"C":47.2},
      {"H":47.3,"L":46.6,"C":46.95},
      {"H":47.5,"L":46.75,"C":47.45},
      {"H":47.6,"L":47.15,"C":47.6},
      {"H":48.45,"L":47.25,"C":48.45},
      {"H":48.4,"L":47.85,"C":48.4},
      {"H":48.4,"L":47.7,"C":47.9},
      {"H":48.55,"L":47.85,"C":48.5},
      {"H":49.1,"L":48.15,"C":48.8},
      {"H":49,"L":48.55,"C":48.75},
      {"H":48.95,"L":48.2,"C":48.55},
      {"H":48.2,"L":47.8,"C":48.2},
      {"H":49,"L":48.05,"C":49},
      {"H":50.2,"L":49,"C":50.1},
      {"H":52,"L":50.7,"C":51.4},
      {"H":51.8,"L":50.9,"C":51.2},
      {"H":51.7,"L":50.8,"C":51.7},
      {"H":51.7,"L":50.7,"C":50.7},
      {"H":50.7,"L":49.5,"C":50.7},
      {"H":51.6,"L":50.8,"C":51.2},
      {"H":51.7,"L":51.2,"C":51.3},
      {"H":51.3,"L":50.6,"C":51.1},
      {"H":51.4,"L":50.2,"C":51}
    ]
    let KD_con=[9,3,3]
    let RSV_arr=[],K_arr=[],D_arr=[]
    cel_RSV(KD_con[0],KD_da.length,KD_da,RSV_arr)
    cel_K(KD_con[1],RSV_arr.length,RSV_arr,K_arr)
    K_arr.shift()
    cel_D(KD_con[2],K_arr.length,K_arr,D_arr)
    D_arr.shift()
    return show_D(K_arr,D_arr)
  }

const dataset = run_K();
console.log(run_K());
const dataset_2 = run_D();
console.log(run_D());
/*var dataset = []; //建立空的資料陣列
var Num = 20
for (var i=0; i < 50; i++){
	var newNum = Num + (5- Math.floor(Math.random() * 10));
	dataset.push(newNum);
	Num = newNum;
}
var dataset_2 =[];
for (var i=0; i < 50; i++){
	var newNum = Num + (5- Math.floor(Math.random() * 10));
	dataset_2.push(newNum);
	Num = newNum;
}
console.log('dataset' ,dataset);
console.log('dataset_2' , dataset_2);*/

var margin = {top: 20, right: 50, bottom: 30, left: 50},
            width =  window.innerWidth - margin.left - margin.right,
            height = 700 - margin.top - margin.bottom;

var ymax_1 = d3.max(dataset);
var ymin_1 = d3.min(dataset);
console.log('dataset' ,ymax_1, ymin_1);

var ymax_2 = d3.max(dataset_2);
var ymin_2 = d3.min(dataset_2);
console.log('dataset' ,ymax_2, ymin_2);

if (ymax_1 > ymax_2){
  Ymax = ymax_1
}
else if(ymax_1==ymax_2){
  Ymax = ymax_1
}
else if (ymax_2>ymax_1){
  Ymax = ymax_2
}

if (ymin_1 > ymin_2){
  Ymin = ymin_2
}
else if(ymax_1==ymax_2){
  Ymin = ymin_1
}
else if (ymax_2>ymax_1){
  Ymin = ymin_1
}
console.log(Ymax,Ymin)
/*
var Ymax = d3.max(dataset),
	Ymin = d3.min(dataset);
*/
var xScale = d3.scaleLinear().domain([0, dataset.length]).range([0, width]);

var yScale = d3.scaleLinear().domain([Ymin, Ymax]).range([height, 0]);

// 增加一個line function，用來把資料轉為x, y
var line = d3.line()
	.x(function(d,i) {
		return xScale(i + 1); //利用尺度運算資料索引，傳回x的位置
	})
	.y(function(d) {
		return yScale(d); //利用尺度運算資料的值，傳回y的位置
	});


//增加一個SVG元素
var svg = d3.select('#chart').append('svg')
	.attr('width', width + margin.left + margin.right) //將左右補滿
	.attr('height', height + margin.top + margin.bottom) //上下補滿
	.append('g') //增加一個群組g
	.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');

// 增加x軸線，tickSize是軸線的垂直高度，-h會往上拉高
var xAxis = d3.axisBottom().scale(xScale).tickSize(-height);

// SVG加入x軸線
svg.append('g')
	.attr('class', 'x axis')
	.attr('transform', 'translate(0,' + height + ')')
	.call(xAxis);


// 建立y軸線
var yAxis = d3.axisLeft().scale(yScale).tickSize(-width);
// SVG加入y軸線
svg.append('g')
	.attr('class', 'y axis')
	.attr('transform', 'translate(0,0)')
	.call(yAxis);

svg.append('path').attr('class', 'line1').attr('d', line(dataset)); //將資料套用d3.svg.line()
svg.append('path').attr('class', 'line2').attr('d', line(dataset_2)); //將資料套用d3.svg.line()
